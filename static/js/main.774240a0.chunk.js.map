{"version":3,"sources":["App/Logo/Logo.js","App/Main/Main.js","App/Footer/Footer.js","App/App.js","serviceWorker.js","index.js"],"names":["Logo","className","href","Main","placeholder","type","Footer","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uVAgBeA,MAZf,WACI,OACI,yBAAKC,UAAU,QACX,uBAAGC,KAAK,KAAI,4BAAI,0BAAMD,UAAU,UAAhB,KAAiC,0BAAMA,UAAU,QAAhB,KAArC,SACZ,yBAAKA,UAAU,UACX,qHACA,uBAAGA,UAAU,YAAb,sI,MCuCDE,MA7Cf,WACI,OACI,0BAAMF,UAAU,QACZ,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,UACX,0EAAY,gDACZ,yGAGJ,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,UAAS,oEACxB,yBAAKA,UAAU,UAAS,qDACxB,yBAAKA,UAAU,UAAS,4FAE5B,yBAAKA,UAAU,SACX,8BACI,2BAAOG,YAAY,YAG3B,yBAAKH,UAAU,aACX,uHAA4B,0BAAMA,UAAU,oBAAhB,MAEhC,yBAAKA,UAAU,aACX,2BAAOA,UAAU,aACb,2BAAOI,KAAK,aACZ,0BAAMJ,UAAU,eAEpB,yBAAKA,UAAU,kBAAiB,0SAAwD,gPAE5F,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,6HAEJ,0BAAMA,UAAU,MAAhB,sBACA,yBAAKA,UAAU,UACX,yEAIZ,yBAAKA,UAAU,gB,MCvBZK,MAhBf,WACI,OACI,4BAAQL,UAAU,UACd,yBAAKA,UAAU,WACX,yBAAKA,UAAU,kBACf,6BACI,0BAAMA,UAAU,YAAhB,gEACA,+JAGR,yBAAKA,UAAU,cCUZM,MAdf,WACE,OACE,yBAAKN,UAAU,OACb,yBAAKA,UAAU,OACf,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,WACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCLUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,IAAD,KAAe,kBAAC,EAAD,OAAyBC,SAASC,eAAe,SD4H1E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.774240a0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './logo.scss';\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"logo\">\r\n            <a href=\"#\"><h1><span className=\"yellow\">U</span><span className=\"blue\">A</span>LUCK</h1></a>\r\n            <div className=\"slogan\">\r\n                <p>Грай та вигравай</p>\r\n                <p className=\"second-p\">Найнадійніший букмекер</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nimport './main.scss';\r\n\r\nfunction Main() {\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"registration-block\">\r\n                <div className=\"action\">\r\n                    <p>Бонус до <span>10 000 &#8372;</span></p>\r\n                    <p>всім клієнтам</p>\r\n                </div>\r\n\r\n                <div className=\"buttons-place\">\r\n                    <div className=\"button\"><span>В 1 клік</span></div>\r\n                    <div className=\"button\"><span>По Email</span></div>\r\n                    <div className=\"button\"><span>Соц. мережі</span></div>\r\n                </div>\r\n                <div className=\"apply\">\r\n                    <form>\r\n                        <input placeholder=\"Email\"></input>\r\n                    </form>\r\n                </div>\r\n                <div className=\"promocode\">\r\n                    <span>Додати промокод</span><span className=\"promocode-button\">&#43;</span>\r\n                </div>\r\n                <div className=\"agreement\">\r\n                    <label className=\"container\">\r\n                        <input type=\"checkbox\"></input>\r\n                        <span className=\"checkmark\"></span>\r\n                    </label>\r\n                    <div className=\"agreement-text\"><p>Я Підтверджую, що я ознайомлений і повністю згоден з <span>Умовами Угоди про використання сайту ualuck</span></p></div>\r\n                </div>\r\n                <div className=\"sign-up\">\r\n                    <div className=\"button\">\r\n                        <span>Зареєструватися</span>\r\n                    </div>\r\n                    <span className=\"or\">Або</span>\r\n                    <div className=\"log-in\">\r\n                        <span>Увійти</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"img-place\">\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nimport './footer.scss';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"quality\">\r\n                <div className=\"standard-mark\"></div>\r\n                <div>\r\n                    <span className=\"verified\">Перевірено</span>\r\n                    <span>«рейтингом букмекерів»</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"payment\">\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport './App.scss';\r\n\r\nimport '../common/style/style.scss'\r\nimport Logo from './Logo/Logo';\r\nimport Main from './Main/Main';\r\nimport Footer from './Footer/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"row\">\r\n      <Route exact path=\"/ualuck\">\r\n          <Logo />\r\n          <Main />\r\n          <Footer />\r\n      </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.scss';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}